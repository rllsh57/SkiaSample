apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.example.rllsh57.opensltest"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'
}


//task generateJniHeaders(type:Exec) {
//    def classpath = android.sourceSets.main.java.srcDirs
//    def nativeIncludes = "src/main/jni"
//    commandLine "javah", "-d", "$nativeIncludes", "-classpath", "$classpath", android.sourceSets.main.java.srcDirs
//    dependsOn classes
//}

task ndkBuild(type: Exec) {
    def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.getNdkFolder()
    commandLine "$ndkDir/ndk-build", '-C', file('src/main').absolutePath
}

tasks.withType(com.android.build.gradle.tasks.PackageApplication) {
    ndkTask -> ndkTask.dependsOn ndkBuild
}

android.sourceSets.main {
    jni.srcDirs = []
    jniLibs.srcDir "src/main/libs"
}
